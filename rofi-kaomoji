#!/usr/bin/sh

# NOTE: KAOMOJIS file taken from https://git.sr.ht/~pkal/insert-kaomoji
# and turned into more readable .md file

moji_path="$(dirname "$0")/KAOMOJIS.md"
categories=$(grep '^# ' "$moji_path" | cut -c3-) # cut '# '

select_random="Control+Return"
# shortcut to remove previously chosen kaomoji
delete_previous="Control+d"

category_menu() {
  category=$(echo "$categories" |
    rofi -dmenu -i -theme-str '#entry { placeholder: "Choose kaomoji:"; }' \
      -kb-accept-custom "" \
      -kb-custom-1 "$select_random" \
      -kb-remove-char-forward "" \
      -kb-custom-2 "$delete_previous")

  rofi_exit=$?

  [ $rofi_exit -eq 1 ] && exit

  case $rofi_exit in
    10) kaomoji_menu "$category" t ;;
    # delete previously selected kaomoji
    11) delete_previous ;;
    0) kaomoji_menu "$category" ;;
    *) exit ;;
  esac
}

delete_previous() {
  # more robust way of finding moji to delete than something like
  #   sed --follow-symlinks -i "/^$(wl-paste -n)$/d" "$moji_path" ;;
  # since many mojis have weird symbols that require escaping
  line="$(grep --line-number --fixed-strings "$(wl-paste -n)" "$moji_path" |
    cut -d: -f 1)"
  sed --follow-symlinks -i "${line}d" "$moji_path"
}

kaomoji_menu() {
  category="$1"
  random="$2"

  kaomojis=$(awk "/^# $1/ {flag=1; next} /^# [a-zA-Z]/ {flag=0} flag" "$moji_path")
  kaomojis="${kaomojis}
back"

  if [ -n "$random" ]; then
    echo "$kaomojis" | head -n -1 | shuf -n 1 | wl-copy -n
    exit 0
  fi

  selection=$(echo "$kaomojis" | rofi -dmenu -i)

  if [ "$selection" = "back" ]; then
    category_menu
  else
    wl-copy -n "$selection"
    wtype "$selection"
  fi
}

category_menu

exit 0
